/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import db.EchipaDB;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import observer.KeyObserver;
import service.SerializeController;

/**
 *
 * @author Alexandru
 */
public class ColorsFrame extends javax.swing.JDialog {
    public static boolean active = false;
    private HashMap<String, EchipaDB> colors;
    private DefaultListModel<String> model;
    /**
     * Creates new form ColorsFrame
     */
    public ColorsFrame(Frame parent, boolean modal) {
        super (parent, modal);
        active = true;
        initComponents();
        
        colors = SerializeController.getInstance().deserializeazaCulori();
        
        model = new DefaultListModel<>();
        
        for (String s : colors.keySet()){
            model.addElement(s);
        }
        
        jList1.setModel(model);
        jList1.setToolTipText("Dublu click pentru a sterge");
        
        
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("+ Adauga");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<< Iesire");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String color = JOptionPane.showInputDialog(this, "Introdu numele culorii : ", "Adauga culoare", JOptionPane.PLAIN_MESSAGE);
        if (colors.keySet().contains(color)) {
            JOptionPane.showMessageDialog(this, "Culoarea exista deja");
            return;
        }
        
        if (color.equals("")) {
            JOptionPane.showMessageDialog(this, "Culoarea nu poate fi nula");
            return;
        }
        
        if (color.length() > KeyObserver.STANDARD_LENGHT) {
            JOptionPane.showMessageDialog(this, "Culoarea a depasit limita de 45 de caractere");
            return;
        }
        
        colors.put(color, null);
        model.addElement(color);
        jList1.setModel(model);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        final String selected = (String) jList1.getSelectedValue();
        
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2 && selected != null) {
            if (colors.get(selected) != null) {
                JOptionPane.showMessageDialog(this, "Culoarea nu poate fi stearsa cat timp este asociata unei echipe");
                return;
            }
            colors.remove(selected);
            model.removeElement(selected);
            jList1.setModel(model);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        SerializeController.getInstance().serializareCulori(colors);
        active = false;
    }//GEN-LAST:event_formWindowClosing

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SerializeController.getInstance().serializareCulori(colors);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
        HelperFrame.getInstance().post(
                "Lista de culori",
                "In aceasta fereastra se pot gestiona culorile reprezentative pentru echipe. Fiecare culoare poate avea asociata "
                        + "o singura echipa, sau niciuna. In cazul in care se va incerca stergea unei culori asociate, "
                        + "programul va da un mesaj de eroare. \n"
                        + "Pentru mai multe optiuni, click dreapta pe orice culoare. \n"
                        + "Lista nu permite duplicate"
                        + "Evident, generalizand aceasta optiune, in locul unei culori putem introduce orice alt obiect "
                        + "reprezentativ pentru o echipa.");
    }//GEN-LAST:event_jList1MouseEntered

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
