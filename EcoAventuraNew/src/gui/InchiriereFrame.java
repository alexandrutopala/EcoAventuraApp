/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import db.MembruEchipaDB;
import dialogs.PermissionFrame;
import dto.UserDTO;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.function.Predicate;
import javax.swing.AbstractAction;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import main.ButtonColumn;
import main.HintTextFieldUI;
import main.Inchiriere;
import service.ControllerDB;
import service.SerializeController;

/**
 *
 * @author Marius
 */
public class InchiriereFrame extends javax.swing.JFrame {
    private final static String [] HEADER1 = new String [] {"Responsabil", "Obiecte inchiriate", "Data inchirierii", "Returneaza"};
    private final static String [] HEADER2 = new String [] {"Responsabil", "Obiecte inchiriate", "Data inchirierii", "Data returnarii"};
    private final static int BUTTON_COLUMN = 3;
    private final static SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private final List<MembruEchipaDB> membri;
    private DefaultTableModel modelInchirieri;
    private DefaultTableModel modelReturnate;
    private TableColumnModel columnModel;
    private TableColumnModel buttonModel;
    private List<Inchiriere> inchirieri;
    private TableCellEditor editor;
    private TableCellRenderer render;
    private ButtonColumn bc;
    /**
     * Creates new form InchiriereFrame
     */
    public InchiriereFrame() {
        super ("Inchirieri");
        initComponents();
        
        modelInchirieri = new DefaultTableModel(HEADER1, 0);
        modelReturnate = new DefaultTableModel(HEADER2, 0);
        
        inchirieri = SerializeController.getInstance().deserializeInchirieri();
        membri = ControllerDB.getInstance().getAllMembri(MainFrame.getSerieActiva());
        
        jTextField1.setUI(new HintTextFieldUI("Ce a inchiriat?"));
        AutoCompleteSupport.install(jComboBox1, GlazedLists.eventListOf(membri.toArray()));        
        
        editor = jTable1.getColumnModel().getColumn(BUTTON_COLUMN).getCellEditor();
        render = jTable1.getColumnModel().getColumn(BUTTON_COLUMN).getCellRenderer();
        
        bc = new ButtonColumn(jTable1, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                Inchiriere i = new Inchiriere((MembruEchipaDB) table.getValueAt(modelRow, 0), table.getValueAt(modelRow, 2).toString());
                i.setImprumut(table.getValueAt(modelRow, 1).toString());
                i.setReturnat(true);
                i.setDataReturnarii(sdf.format(Calendar.getInstance().getTime()));
                inchirieri.remove(i);
                inchirieri.add(i);
                SerializeController.getInstance().serializeInchirieri(inchirieri);
                ((DefaultTableModel) table.getModel()).removeRow(modelRow);
                Object [] row = new Object[] {i.getResponsabil(), i.getImprumut(), i.getDataInchiriere(), i.getDataReturnarii()};
                modelReturnate.addRow(row);
            }
        }, BUTTON_COLUMN);
        
        for (int j = 0; j < inchirieri.size(); ++j) {
            Inchiriere i = inchirieri.get(j);
            if (!i.isReturnat()) {
                Object [] row = new Object [] {i.getResponsabil(), i.getImprumut(), i.getDataInchiriere(), "Returneaza!"};
                modelInchirieri.addRow(row);
            } else {
                Object [] row = new Object [] {i.getResponsabil(), i.getImprumut(), i.getDataInchiriere(), i.getDataReturnarii()};
                modelReturnate.addRow(row);
            }
        }
        
        
        jTable1.setModel(modelInchirieri);
        jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellEditor(bc);
        jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellRenderer(bc);        
        
        setPreferredSize(new Dimension(getWidth(), Toolkit.getDefaultToolkit().getScreenSize().height));
        setLocation(0, 0);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Inchiriaza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jToggleButton1.setText("Afiseaza returnari");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Optiuni");

        jMenuItem1.setText("Sterge returnarile");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, 0, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addComponent(jScrollPane1)
            .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if (jToggleButton1.isSelected()) {
            jToggleButton1.setText("Afiseaza inchirieri");            
            jTable1.setModel(modelReturnate);
            jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellEditor(editor);
            jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellRenderer(render);
        } else {
            jToggleButton1.setText("Afiseaza returnari");
            jTable1.setModel(modelInchirieri);
            jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellEditor(bc);
            jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellRenderer(bc);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MembruEchipaDB m = (MembruEchipaDB) jComboBox1.getSelectedItem();
        String imprumut = jTextField1.getText();
        
        Inchiriere i = new Inchiriere(m, imprumut);
        inchirieri.add(i);
        SerializeController.getInstance().serializeInchirieri(inchirieri);
        
        Object [] row = new Object[] {m, imprumut, i.getDataInchiriere(), "Returneaza!"};
        modelInchirieri.addRow(row);
        jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellEditor(bc);
        jTable1.getColumnModel().getColumn(BUTTON_COLUMN).setCellRenderer(bc);
        
        jTextField1.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        PermissionFrame perm = new PermissionFrame(this, true, "confirma stergerea inregistrarilor evidentelor tuturor retururilor", UserDTO.ACCES_COORDONATOR);
        if (!perm.isApproved()) {
            return;
        }
        
        inchirieri.removeIf(new Predicate<Inchiriere> () {
            @Override
            public boolean test(Inchiriere t) {
                return t.isReturnat();
            }
        });
        SerializeController.getInstance().serializeInchirieri(inchirieri);
        
        while (modelReturnate.getRowCount() != 0) {
            modelReturnate.removeRow(0);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
