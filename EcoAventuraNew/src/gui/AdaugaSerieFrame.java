/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import db.EchipaDB;
import db.EchipaDataDB;
import db.SerieDB;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import service.ControllerDB;
import service.SerializeController;

/**
 *
 * @author Alexandru
 */
public class AdaugaSerieFrame extends javax.swing.JFrame {
    private final static int MAX_VAL = 100;
    private SimpleDateFormat sdf;
    /**
     * Creates new form AdaugaSerieFrame
     */
    public AdaugaSerieFrame() {
        super("Adauga Serie");
        initComponents();
        
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        jDateChooser1.setDateFormatString("dd/MM/yyyy");
        jDateChooser1.setDate(Calendar.getInstance().getTime());
        jSpinner1.setValue(ControllerDB.getInstance().getMaxSeriesNumber() + 1);
        jSpinner2.setValue(1);
        
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Adauga Serie");

        jLabel2.setText("Numar serie :");

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel3.setText("Numar echipe :");

        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jLabel4.setText("Data inceput :");

        jButton1.setText("Mai departe");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinner1)
                            .addComponent(jSpinner2)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int nrSerie = (int) jSpinner1.getValue();
        int nrEchipe = (int) jSpinner2.getValue();
        String date = sdf.format(jDateChooser1.getDate());              
        
        SerieDB s = ControllerDB.getInstance().getLastSerie();
        if (s != null){ 
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date data = (Date) df.parse(s.getDataInceput());
                Calendar cal = new GregorianCalendar();
                cal.setTime(data);
                cal.add(Calendar.DAY_OF_MONTH, MainFrame.zilePerSerie - 1);
                data = cal.getTime();
                if (data.after(jDateChooser1.getDate())){
                    JOptionPane.showMessageDialog(this, "Nu poti adauga serii mai devreme de data " + df.format(data));
                    return;
                }
            } catch (ParseException ex) {
                Logger.getLogger(AdaugaSerieFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        HashMap<String, EchipaDB> culori = SerializeController.getInstance().deserializeazaCulori();
        int counter = 0;
        for (String str : culori.keySet()) {
            if (culori.get(str) == null) {
                counter++;
            }
        }
        if (counter < nrEchipe) {
            int input = JOptionPane.showConfirmDialog(this, "<html>In momentul de fata nu exista suficiente culori disponibile pentru fiecare echipa.<br> Adaugati acum?</html>", "Atentie", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (input == JOptionPane.YES_OPTION) {
                new ColorsFrame(this, true).setVisible(true);
                jButton1ActionPerformed(evt);
                return;
            } else {
                return;
            }
        }
        // TODO: arhivarea automata nu functioneaza corespunzator
//        if (ControllerDB.getInstance().getSeriesNumber() >= 4) {
//            SerieDB first = ControllerDB.getInstance().getFirstSerie();
//            if (first != null) {
//                try {
//                    HashMap<SerieDB, List<EchipaDataDB>> data = new HashMap<>();
//                    SerieDB serieArhivata = ControllerDB.getInstance().arhivSerie(first, data);
//                    if (serieArhivata == null) throw new Exception();
//
//                    if (!SerializeController.getInstance().salveazaSerie(first, data.get(serieArhivata))) throw new Exception();
//                } catch (Exception e) {}
//                
//            }
//        }
        SerieDB serie = ControllerDB.getInstance().adaugaSerie(nrSerie, date);
        
        if (serie == null){
            JOptionPane.showMessageDialog(this, "Exista deja seria " + jSpinner1.getValue());
            return;
        }
        
        dispose();
        
        if (nrEchipe == 0) return;
        
        MainFrame.openFrame(new AdaugaEchipaFrame(serie, nrEchipe, null), false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        int val = (int) jSpinner1.getValue();
        if (val < 1) jSpinner1.setValue(1);
        else if (val > MAX_VAL) jSpinner1.setValue(MAX_VAL);
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        int val = (int) jSpinner2.getValue();
        if (val < 0) jSpinner2.setValue(0);
        else if (val > MAX_VAL) jSpinner2.setValue(MAX_VAL);
    }//GEN-LAST:event_jSpinner2StateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables
}
