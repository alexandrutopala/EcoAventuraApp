/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import db.AnimatorDB;
import db.UserDB;
import dialogs.ChangePasswordDialog;
import dialogs.PermissionFrame;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import observer.KeyObserver;
import server.ServerFrame;
import server.ServerThread;
import service.ControllerDB;

/**
 *
 * @author Alexandru
 */
public class GestioneazaUseriFrame extends javax.swing.JFrame {
    private final static int STANDARD_LIST_WIDTH = 170;
    private final static String [] GRADES = new String[] {"ACCES_ANIMATOR", "ACCES_COORDONATOR", "ACCES_ADMINISTRATOR"};
    private UserDB user;
    private DefaultListModel<UserDB> usersModel;
    private DefaultComboBoxModel<String> comboModel;
    private boolean changed = false;
    private MainFrame main;
    /**
     * Creates new form GestioneazaUseriFrame
     * @param main
     * @param user
     */
    public GestioneazaUseriFrame(MainFrame main, UserDB user) {
        super ("Gestioneaza utilizatori");
        initComponents();
        
        this.user = user;
        this.main = main;
        
        usersModel = new DefaultListModel<>();
        comboModel = new DefaultComboBoxModel<>(GRADES);
        
        updateList();
        
        jList1.setFixedCellWidth(STANDARD_LIST_WIDTH);
        jList1.setModel(usersModel);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        jComboBox1.setModel(comboModel);
        
        jList1.addListSelectionListener(new ListSelectionListener() {
            private UserDB last = null;
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (!lse.getValueIsAdjusting()) {
                    final UserDB selected = (UserDB) jList1.getSelectedValue();
                    if (selected == null) {
                        dezactivateFields();                        
                    } else {
                        if (selected != last) {
                            dezactivateFields();
                            last = selected;
                        }
                        showFields(selected);
                    }
                }
            }
        });
        
        jTextField2.setVisible(false);
        jTextField2.setEnabled(false);
        dezactivateFields();
        
        jTextField1.addKeyListener(new KeyObserver(KeyObserver.STANDARD_LENGHT, jTextField1));
        
        
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    private void updateList (){    
        usersModel.clear();
        List<UserDB> users = ControllerDB.getInstance().getUsers();
        
        for (UserDB u : users) {
            usersModel.addElement(u);
        }
        
        jList1.setModel(usersModel);
    }

    private void dezactivateFields () {
        jButton3.setText("Sterge");
        jButton2.setText("Modifica");
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jTextField1.setEnabled(false);
        jTextField1.setText("");
        jTextField2.setText("");
        jButton1.setEnabled(false);
        jComboBox1.setEnabled(false);
    }
    
    private void showFields (UserDB user) {
        jTextField1.setText(user.getUsername());
        jTextField2.setText(user.getParola());
        jComboBox1.setSelectedIndex(user.getAcces() - 1);
        jButton2.setEnabled(true);
    }
    
    private void activateFields () {
        jTextField1.setEnabled(true);
        jButton1.setEnabled(true);
        jComboBox1.setEnabled(true);
        jButton3.setEnabled(true);
        jButton2.setText("Salveaza");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Utilizatiori"));

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Nume utilizator");

        jLabel2.setText("Parola");

        jLabel3.setText("Grad de acces");

        jButton1.setText("Modifica parola");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Actiuni"));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(4, 4, 4))
        );

        jTextField2.setText("jTextField2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1)
                                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton4.setText("<< Iesire");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
        if (changed) {
            main.restartApp();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jButton2.getText().equals("Modifica")) {
            if (SerieActivaFrame.isExistingRunningProgram()) {
                int input = JOptionPane.showConfirmDialog(this, "<html>Nu se pot face modificari asupra userului cat timp exista un program activ. <br>Doriti sa resetati programul pentru a realiza modificarile?</html>", "Eroare", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
                
                if (input == JOptionPane.YES_OPTION) {
                    SerieActivaFrame.reseteazaSarcini(this, true);
                } else {
                    return;
                }
            }
            
            final UserDB selected = (UserDB) jList1.getSelectedValue();

            if (ServerFrame.isOn) {
                for (ServerThread st : ServerFrame.getInstance().getClients()){
                    if (st.getUser() != null) {
                        if (st.getUser().getId() == selected.getIdUser()) {
                            JOptionPane.showMessageDialog(this, "Userul nu poate fi modificat cat timp este logat", "Eroare", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                }
            }
            activateFields();
        } else {
            final UserDB selected = (UserDB) jList1.getSelectedValue();
            int same = selected.equals(this.user) ? -1 : 0;
            if (same == -1) jComboBox1.setSelectedIndex(user.getAcces()-1);
            PermissionFrame permission = new PermissionFrame(this, true, "Confirmare modificare utilizator", jComboBox1.getSelectedIndex() + 1 + same);
            
            if (permission.isApproved()) {
                UserDB user = (UserDB) jList1.getSelectedValue();
                if (!jTextField1.getText().equals(user.getUsername())) {
                    AnimatorDB animator = ControllerDB.getInstance().getAnimator(user.getUsername());
                    if (animator != null) {
                        animator.setNumeAnimator(user.getUsername());
                        ControllerDB.getInstance().editeazaAnimator(animator);
                    }
                }
                user.setUsername(jTextField1.getText());
                user.setParola(jTextField2.getText());
                user.setAcces(jComboBox1.getSelectedIndex() + 1);
                boolean rez = ControllerDB.getInstance().updateUser(user);
                if (rez) {
                    JOptionPane.showMessageDialog(this, "Succes", "Uraa", JOptionPane.INFORMATION_MESSAGE);  
                    updateList();
                    if (user == this.user) changed = true;
                } else {
                    JOptionPane.showMessageDialog(this, "Utilizatorul nu a putut fi modificat", "Uff..", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final UserDB selected = (UserDB) jList1.getSelectedValue();
        ChangePasswordDialog cp = new ChangePasswordDialog(this, true, selected.getParola());
        
        if (cp.isApproved()) {
            jTextField2.setText(cp.getNewPassword());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (changed) {
            main.restartApp();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        final UserDB user = (UserDB) jList1.getSelectedValue();
        int same = user.equals(this.user) ? 0 : 1;
        PermissionFrame permission = new PermissionFrame(this, true, "Confirmare stergere utilizator", jComboBox1.getSelectedIndex() + 1 + same);
        
        if (permission.isApproved()) {
            boolean rez = ControllerDB.getInstance().stergeUser(user);
            if (rez) {
                JOptionPane.showMessageDialog(this, "Succes", "Uraa", JOptionPane.INFORMATION_MESSAGE);   
                if (user == this.user) { 
                    main.restartApp();
                }
                usersModel.removeElement(user);
                jList1.setModel(usersModel);
            } else {
                JOptionPane.showMessageDialog(this, "Utilizatorul nu a putut fi sters", "Uff..", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        HelperFrame.getInstance().post(
                "Fereastra de gestionare a utilizatorilor",
                "In aceasta fereastra se pot vizualiza utilizatorii inregistrati in aplicatie, pot fi modificati sau stersi. \n"
                        + "DE RETINUT: administratorul aplicatiei nu va putea fi sters nicicum.");
    }//GEN-LAST:event_formMouseEntered

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
        HelperFrame.getInstance().post(
                "Lista utilizatorilor inregistrati",
                "Click pe un utilizator pentru a vizualiza informatii despre acesta.");
    }//GEN-LAST:event_jList1MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
